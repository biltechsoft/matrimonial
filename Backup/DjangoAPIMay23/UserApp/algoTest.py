import numpy as np

maleMatrix = [[20.0, 20.0, 20.0, 30.0, 30.0, 20.0, 20.0, 20.0, 20.0, 30.0, 20.0, 20.0, 30.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0], [20.0, 20.0, 30.0, 20.0, 20.0, 40.0, 30.0, 20.0, 20.0, 40.0, 50.0, 40.0, 30.0, 30.0, 30.0, 40.0, 40.0, 30.0, 40.0, 20.0, 30.0], [50.0, 30.0, 50.0, 50.0, 40.0, 40.0, 50.0, 40.0, 40.0, 60.0, 60.0, 60.0, 50.0, 60.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 50.0], [40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0, 40.0], [30.0, 20.0, 40.0, 30.0, 40.0, 30.0, 30.0, 30.0, 30.0, 40.0, 50.0, 50.0, 50.0, 50.0, 30.0, 40.0, 40.0, 30.0, 40.0, 30.0, 30.0], [40.0, 30.0, 60.0, 30.0, 30.0, 30.0, 40.0, 50.0, 40.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 60.0, 40.0, 50.0, 50.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [20.0, 30.0, 40.0, 20.0, 20.0, 10.0, 10.0, 30.0, 30.0, 10.0, 30.0, 10.0, 20.0, 20.0, 20.0, 20.0, 20.0, 30.0, 40.0, 20.0, 20.0], [40.0, 20.0, 50.0, 50.0, 30.0, 40.0, 40.0, 40.0, 40.0, 60.0, 50.0, 60.0, 50.0, 60.0, 40.0, 50.0, 40.0, 30.0, 40.0, 50.0, 40.0], [30.0, 20.0, 50.0, 40.0, 50.0, 30.0, 30.0, 40.0, 30.0, 40.0, 40.0, 40.0, 50.0, 40.0, 30.0, 30.0, 30.0, 30.0, 40.0, 30.0, 30.0], [50.0, 30.0, 50.0, 50.0, 30.0, 50.0, 50.0, 40.0, 40.0, 60.0, 60.0, 60.0, 50.0, 60.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 50.0], [40.0, 40.0, 30.0, 30.0, 40.0, 40.0, 40.0, 30.0, 20.0, 30.0, 40.0, 30.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 30.0, 50.0, 60.0, 50.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0, 50.0, 40.0, 40.0], [40.0, 20.0, 50.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [40.0, 20.0, 50.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0], [30.0, 20.0, 50.0, 40.0, 40.0, 30.0, 30.0, 40.0, 30.0, 50.0, 50.0, 50.0, 60.0, 50.0, 40.0, 50.0, 40.0, 30.0, 40.0, 40.0, 30.0], [40.0, 30.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 30.0, 50.0, 60.0, 50.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0, 50.0, 40.0, 40.0], [50.0, 30.0, 50.0, 50.0, 30.0, 50.0, 50.0, 40.0, 20.0, 50.0, 50.0, 50.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 50.0, 50.0, 50.0], [40.0, 30.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [30.0, 20.0, 50.0, 40.0, 40.0, 30.0, 30.0, 40.0, 30.0, 50.0, 50.0, 50.0, 60.0, 50.0, 30.0, 40.0, 40.0, 30.0, 40.0, 30.0, 30.0], [30.0, 20.0, 40.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 30.0, 30.0], [40.0, 20.0, 50.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0], [40.0, 20.0, 50.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0], [30.0, 20.0, 50.0, 40.0, 50.0, 30.0, 30.0, 40.0, 30.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0], [40.0, 30.0, 50.0, 40.0, 40.0, 40.0, 50.0, 40.0, 20.0, 50.0, 50.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0, 40.0, 50.0, 40.0, 40.0], [30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 20.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0], [40.0, 30.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 0.0]]


femaleMatrix = [[30.0, 40.0, 50.0, 70.0, 70.0, 30.0, 40.0, 60.0, 50.0, 40.0, 50.0, 50.0, 60.0, 40.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0], [20.0, 40.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 40.0, 30.0, 40.0, 30.0, 30.0, 30.0, 40.0, 30.0, 40.0, 40.0, 30.0, 20.0, 40.0], [30.0, 40.0, 50.0, 60.0, 50.0, 40.0, 40.0, 60.0, 40.0, 40.0, 40.0, 50.0, 60.0, 40.0, 60.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0], [40.0, 50.0, 50.0, 70.0, 60.0, 40.0, 50.0, 70.0, 40.0, 40.0, 60.0, 60.0, 60.0, 50.0, 50.0, 50.0, 40.0, 60.0, 60.0, 50.0, 60.0], [30.0, 40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 60.0, 40.0, 40.0, 30.0, 50.0, 60.0, 40.0, 60.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 30.0, 50.0, 30.0, 40.0, 30.0, 40.0, 50.0, 40.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [20.0, 40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 50.0, 40.0, 40.0, 50.0, 40.0], [30.0, 40.0, 30.0, 40.0, 30.0, 20.0, 30.0, 40.0, 40.0, 40.0, 40.0, 40.0, 30.0, 30.0, 40.0, 30.0, 40.0, 40.0, 30.0, 30.0, 40.0], [20.0, 20.0, 40.0, 40.0, 40.0, 30.0, 30.0, 40.0, 20.0, 20.0, 30.0, 30.0, 40.0, 20.0, 40.0, 30.0, 30.0, 20.0, 30.0, 30.0, 20.0], [30.0, 40.0, 40.0, 50.0, 40.0, 40.0, 30.0, 50.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 60.0, 40.0, 40.0, 40.0, 50.0, 40.0, 30.0], [30.0, 40.0, 40.0, 60.0, 60.0, 30.0, 30.0, 60.0, 50.0, 40.0, 40.0, 50.0, 60.0, 50.0, 50.0, 40.0, 30.0, 40.0, 50.0, 30.0, 40.0], [40.0, 40.0, 50.0, 60.0, 50.0, 50.0, 40.0, 60.0, 30.0, 40.0, 50.0, 50.0, 50.0, 40.0, 60.0, 50.0, 50.0, 40.0, 60.0, 50.0, 50.0], [30.0, 50.0, 50.0, 40.0, 40.0, 50.0, 20.0, 40.0, 30.0, 30.0, 30.0, 30.0, 40.0, 30.0, 60.0, 30.0, 40.0, 30.0, 50.0, 30.0, 30.0], [30.0, 40.0, 40.0, 40.0, 30.0, 50.0, 30.0, 40.0, 30.0, 40.0, 40.0, 30.0, 30.0, 30.0, 50.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0], [30.0, 30.0, 30.0, 40.0, 30.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 30.0, 40.0, 30.0, 50.0, 30.0, 30.0, 30.0, 40.0, 30.0, 30.0], [40.0, 40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 60.0, 30.0, 40.0, 40.0, 50.0, 50.0, 40.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [30.0, 40.0, 50.0, 50.0, 40.0, 40.0, 30.0, 50.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [20.0, 50.0, 40.0, 50.0, 40.0, 30.0, 40.0, 50.0, 50.0, 40.0, 40.0, 50.0, 50.0, 50.0, 40.0, 40.0, 30.0, 50.0, 40.0, 40.0, 50.0], [40.0, 40.0, 50.0, 50.0, 40.0, 40.0, 50.0, 60.0, 40.0, 50.0, 50.0, 60.0, 50.0, 40.0, 50.0, 50.0, 50.0, 50.0, 50.0, 60.0, 50.0], [30.0, 40.0, 50.0, 50.0, 40.0, 50.0, 40.0, 50.0, 30.0, 40.0, 40.0, 40.0, 50.0, 30.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [20.0, 40.0, 50.0, 40.0, 40.0, 60.0, 40.0, 40.0, 30.0, 30.0, 50.0, 40.0, 40.0, 40.0, 50.0, 50.0, 50.0, 50.0, 50.0, 40.0, 50.0], [30.0, 40.0, 40.0, 60.0, 50.0, 30.0, 40.0, 60.0, 40.0, 30.0, 40.0, 50.0, 60.0, 50.0, 40.0, 40.0, 20.0, 40.0, 50.0, 40.0, 50.0], [30.0, 40.0, 50.0, 50.0, 50.0, 60.0, 40.0, 50.0, 40.0, 40.0, 50.0, 50.0, 50.0, 50.0, 40.0, 50.0, 40.0, 50.0, 60.0, 60.0, 50.0], [30.0, 30.0, 30.0, 50.0, 50.0, 20.0, 30.0, 50.0, 50.0, 40.0, 30.0, 40.0, 50.0, 40.0, 50.0, 30.0, 30.0, 40.0, 40.0, 30.0, 30.0], [30.0, 40.0, 40.0, 50.0, 40.0, 40.0, 30.0, 50.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 60.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [30.0, 40.0, 50.0, 60.0, 60.0, 30.0, 50.0, 70.0, 50.0, 40.0, 40.0, 60.0, 70.0, 50.0, 50.0, 40.0, 30.0, 50.0, 50.0, 40.0, 40.0], [50.0, 50.0, 50.0, 70.0, 60.0, 40.0, 50.0, 70.0, 50.0, 50.0, 60.0, 60.0, 60.0, 50.0, 60.0, 50.0, 50.0, 60.0, 60.0, 50.0, 60.0], [40.0, 40.0, 50.0, 50.0, 40.0, 40.0, 30.0, 50.0, 30.0, 40.0, 30.0, 50.0, 50.0, 40.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [40.0, 40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 60.0, 30.0, 40.0, 40.0, 50.0, 50.0, 30.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [30.0, 50.0, 50.0, 70.0, 60.0, 40.0, 50.0, 70.0, 50.0, 40.0, 50.0, 60.0, 70.0, 60.0, 50.0, 50.0, 40.0, 50.0, 60.0, 50.0, 0.0]]

# def calculate_element_stats(matrix1, matrix2):
#     combined_averages = []
#     combined_variances = []
    
#     for row1, row2 in zip(matrix1, matrix2):
#         avg_row = [(val1 + val2) / 2 for val1, val2 in zip(row1, row2)]
#         var_row = [np.var([val1, val2]) for val1, val2 in zip(row1, row2)]
#         combined_averages.append(avg_row)
#         combined_variances.append(var_row)
    
#     return combined_averages, combined_variances

# def flatten(matrix):
#     return [item for sublist in matrix for item in sublist]

# def normalize(values):
#     min_val = min(values)
#     max_val = max(values)
#     return [(val - min_val) / (max_val - min_val) if max_val != min_val else 0 for val in values]

# def combine_scores(averages, variances, weight_average=1, weight_variance=1):
#     combined_scores = [weight_average * avg - weight_variance * var for avg, var in zip(averages, variances)]
#     return combined_scores

# # Calculate element-wise stats for maleMatrix and femaleMatrix
# combined_averages, combined_variances = calculate_element_stats(maleMatrix, femaleMatrix)
# # print(f'combined_averages {combined_averages}')
# # Flatten the matrices to work with 1D arrays for normalization and sorting
# flattened_averages = flatten(combined_averages)
# flattened_variances = flatten(combined_variances)

# # Normalize the flattened arrays
# normalized_averages = normalize(flattened_averages)
# normalized_variances = normalize(flattened_variances)

# # Calculate combined scores
# combined_scores = combine_scores(normalized_averages, normalized_variances)

# # Reconstruct the matrix indices
# indices = [(i, j) for i in range(len(maleMatrix)) for j in range(len(maleMatrix[0]))]

# # Sort indices based on combined scores
# sorted_indices = sorted(indices, key=lambda idx: combined_scores[indices.index(idx)], reverse=True)
# print(f'sorted_indices{sorted_indices}')
# print(len(sorted_indices) , len(sorted_indices[0]))
# # Create sorted matrices based on combined scores
# sorted_maleMatrix = [[0] * len(maleMatrix[0]) for _ in range(len(maleMatrix))]
# sorted_femaleMatrix = [[0] * len(femaleMatrix[0]) for _ in range(len(femaleMatrix))]

# for rank, (i, j) in enumerate(sorted_indices):
#     sorted_maleMatrix[rank // len(maleMatrix[0])][rank % len(maleMatrix[0])] = maleMatrix[i][j]
#     sorted_femaleMatrix[rank // len(femaleMatrix[0])][rank % len(femaleMatrix[0])] = femaleMatrix[i][j]

# print("Sorted Male Matrix:")
# for row in sorted_maleMatrix:
#     print(row)

# print("\nSorted Female Matrix:")
# for row in sorted_femaleMatrix:
#     print(row)
    
idPair =[(21, 12), (2, 3), (2, 11), (2, 12), (3, 17), (3, 18), (4, 12), (5, 14), (10, 4), (10, 12), (11, 3), (11, 10), (11, 11), (11, 18), (17, 12), (18, 10), (18, 11), (25, 4), (26, 10), (26, 11), (26, 12), (26, 14), (26, 18), (29, 18), (2, 2), (2, 15), (2, 16), (2, 18), (2, 19), (3, 1), (3, 2), (3, 14), (3, 15), (4, 11), (5, 7), (5, 18), (6, 2), (9, 3), (9, 12), (11, 2), (11, 5), (11, 12), (11, 15), (11, 16), (11, 19), (11, 20), (13, 16), (15, 2), (15, 18), (16, 2), (17, 11), (17, 13), (18, 2), (18, 9), (18, 12), (18, 15), (18, 16), (18, 18), (19, 2), (19, 3), (19, 5), (19, 18), (20, 2), (20, 10), (20, 18), (21, 11), (21, 13), (22, 10), (24, 12), (25, 2), (26, 2), (26, 6), (26, 9), (26, 15), (28, 2), (28, 18), (29, 2), (29, 10), (3, 7), (25, 12), (1, 10), (2, 4), (2, 6), (2, 20), (3, 6), (3, 13), (3, 19), (4, 2), (4, 13), (4, 18), (5, 11), (5, 12), (5, 13), (5, 16), (5, 17), (6, 3), (6, 7), (6, 10), (6, 11), (6, 12), (6, 14), (6, 15), (6, 16), (6, 18), (6, 19), (7, 10), (9, 2), (9, 7), (9, 15), (9, 18), (9, 19), (10, 2), (10, 11), (10, 13), (10, 18), (11, 0), (11, 6), (12, 1), (12, 5), (12, 18), (13, 2), (13, 5), (13, 9), (13, 14), (13, 15), (13, 18), (14, 12), (14, 14), (15, 3), (15, 10), (15, 11), (15, 12), (15, 16), (16, 3), (16, 7), (16, 12), (16, 16), (16, 18), (17, 2), (17, 3), (17, 7), (17, 9), (17, 10), (17, 15), (18, 3), (18, 6), (18, 13), (18, 14), (18, 17), (18, 20), (19, 6), (19, 7), (19, 9), (19, 10), (19, 11), (19, 12), (19, 16), (19, 19), (19, 20), (20, 14), (20, 15), (20, 16), (20, 17), (20, 20), (21, 2), (21, 4), (21, 10), (21, 18), (22, 2), (22, 11), (22, 12), (22, 13), (22, 15), (23, 3), (23, 4), (23, 7), (23, 12), (23, 14), (24, 2), (24, 3), (24, 7), (24, 18), (25, 13), (25, 14), (25, 18), (26, 0), (26, 13), (26, 16), (26, 19), (28, 3), (28, 10), (28, 11), (28, 12), (28, 16), (29, 6), (29, 14), (29, 15), (29, 17), (29, 19), (1, 16), (2, 5), (2, 8), (2, 17), (3, 0), (3, 5), (3, 8), (3, 9), (3, 16), (4, 4), (4, 9), (4, 15), (4, 16), (5, 0), (5, 9), (5, 19), (5, 20), (6, 4), (6, 6), (6, 9), (6, 13), (6, 17), (6, 20), (7, 3), (7, 7), (7, 9), (7, 11), (7, 14), (7, 16), (7, 17), (7, 20), (8, 2), (9, 5), (9, 8), (9, 16), (10, 9), (10, 10), (11, 17), (12, 4), (12, 12), (12, 16), (13, 3), (13, 7), (13, 17), (13, 19), (13, 20), (14, 3), (14, 7), (14, 9), (14, 18), (15, 0), (15, 6), (15, 9), (15, 13), (15, 15), (15, 17), (15, 19), (15, 20), (16, 9), (16, 11), (16, 13), (16, 15), (16, 17), (16, 19), (16, 20), (17, 4), (17, 14), (17, 18), (17, 19), (18, 0), (18, 5), (19, 15), (19, 17), (20, 3), (20, 6), (20, 7), (20, 11), (20, 12), (20, 13), (20, 19), (21, 15), (22, 9), (22, 16), (23, 9), (23, 11), (23, 13), (23, 18), (24, 4), (24, 9), (24, 11), (24, 13), (24, 15), (24, 17), (24, 19), (24, 20), (25, 9), (25, 10), (25, 15), (25, 19), (26, 5), (28, 0), (28, 5), (28, 6), (28, 9), (28, 15), (28, 17), (28, 19), (28, 20), (29, 9), (29, 16), (2, 7), (2, 9), (2, 10), (2, 13), (2, 14), (3, 4), (3, 10), (3, 11), (3, 12), (3, 20), (5, 2), (5, 15), (9, 9), (9, 11), (9, 13), (9, 14), (10, 3), (10, 7), (11, 7), (11, 9), (11, 13), (11, 14), (12, 14), (13, 10), (15, 7), (15, 14), (16, 14), (18, 7), (18, 19), (19, 14), (20, 5), (21, 3), (21, 7), (22, 18), (24, 14), (25, 3), (25, 11), (26, 4), (26, 17), (26, 20), (28, 7), (28, 14), (29, 11), (29, 13), (29, 20), (0, 9), (1, 5), (1, 9), (1, 11), (1, 14), (1, 15), (1, 17), (1, 18), (1, 20), (2, 1), (4, 5), (4, 6), (4, 8), (4, 17), (4, 19), (4, 20), (5, 1), (5, 4), (5, 5), (5, 6), (5, 8), (6, 1), (6, 5), (6, 8), (7, 0), (7, 1), (7, 4), (7, 6), (7, 8), (7, 13), (7, 15), (7, 19), (8, 7), (8, 18), (9, 0), (9, 4), (9, 6), (9, 17), (9, 20), (10, 15), (10, 17), (10, 20), (11, 1), (11, 8), (12, 0), (12, 3), (12, 7), (12, 10), (12, 15), (12, 17), (12, 19), (12, 20), (13, 0), (13, 1), (13, 6), (14, 0), (14, 4), (14, 8), (14, 11), (14, 13), (14, 15), (14, 17), (14, 19), (14, 20), (15, 1), (15, 4), (15, 5), (16, 0), (16, 4), (16, 5), (16, 6), (16, 8), (16, 10), (17, 6), (17, 16), (18, 1), (18, 4), (18, 8), (19, 1), (19, 4), (20, 1), (20, 4), (20, 9), (21, 6), (21, 8), (21, 14), (21, 17), (21, 19), (22, 6), (22, 8), (22, 14), (23, 0), (23, 6), (23, 10), (23, 15), (23, 17), (23, 19), (24, 0), (24, 5), (24, 6), (24, 8), (24, 10), (24, 16), (25, 20), (27, 0), (27, 1), (27, 4), (27, 5), (27, 9), (27, 13), (27, 15), (27, 17), (27, 19), (27, 20), (28, 1), (28, 4), (28, 13), (29, 0), (29, 5), (1, 2), (1, 6), (1, 12), (1, 13), (4, 0), (8, 10), (10, 0), (10, 5), (10, 6), (10, 16), (10, 19), (12, 9), (12, 11), (12, 13), (13, 4), (13, 8), (14, 16), (15, 8), (17, 5), (20, 8), (21, 0), (21, 5), (22, 0), (23, 16), (23, 20), (25, 0), (25, 5), (25, 16), (27, 6), (27, 10), (28, 8), (3, 3), (25, 7), (26, 3), (26, 7), (29, 3), (29, 7), (29, 12), (2, 0), (4, 3), (4, 10), (5, 3), (5, 10), (7, 2), (7, 12), (7, 18), (9, 10), (10, 8), (10, 14), (11, 4), (12, 2), (13, 11), (13, 12), (13, 13), (14, 2), (17, 8), (17, 17), (17, 20), (19, 0), (19, 13), (21, 9), (21, 20), (22, 3), (22, 4), (22, 7), (22, 17), (22, 20), (23, 2), (23, 8), (25, 6), (25, 8), (25, 17), (26, 1), (27, 2), (27, 3), (27, 7), (27, 11), (27, 12), (27, 16), (27, 18), (29, 1), (29, 8), (0, 0), (0, 5), (0, 16), (1, 3), (1, 4), (1, 7), (8, 1), (8, 8), (8, 15), (8, 16), (8, 17), (8, 19), (12, 8), (14, 1), (14, 5), (17, 0), (19, 8), (23, 1), (23, 5), (27, 8), (1, 0), (1, 19), (8, 0), (8, 13), (8, 20), (0, 12), (4, 7), (4, 14), (22, 5), (22, 19), (27, 14), (29, 4), (0, 1), (0, 6), (0, 13), (0, 15), (0, 17), (0, 18), (0, 19), (0, 20), (1, 1), (1, 8), (4, 1), (6, 0), (7, 5), (8, 3), (8, 4), (8, 12), (8, 14), (9, 1), (10, 1), (12, 6), (14, 6), (14, 10), (16, 1), (20, 0), (21, 1), (21, 16), (22, 1), (24, 1), (25, 1), (8, 9), (0, 2), (0, 8), (0, 10), (0, 11), (0, 14), (17, 1), (26, 8), (8, 5), (8, 6), (8, 11), (0, 3), (0, 4), (0, 7)]

for si in idPair:
    print(si[0])
