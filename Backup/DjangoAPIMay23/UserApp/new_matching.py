maleMatrix =[[20.0, 20.0, 20.0, 30.0, 30.0, 20.0, 20.0, 20.0, 20.0, 30.0, 20.0, 20.0, 30.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0, 20.0], [20.0, 20.0, 30.0, 20.0, 20.0, 40.0, 30.0, 20.0, 20.0, 40.0, 50.0, 40.0, 30.0, 30.0, 30.0, 40.0, 40.0, 30.0, 40.0, 20.0, 30.0], [50.0, 30.0, 50.0, 50.0, 40.0, 40.0, 50.0, 40.0, 40.0, 60.0, 60.0, 60.0, 50.0, 60.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 50.0], [40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0, 40.0], [30.0, 20.0, 40.0, 30.0, 40.0, 30.0, 30.0, 30.0, 30.0, 40.0, 50.0, 50.0, 50.0, 50.0, 30.0, 40.0, 40.0, 30.0, 40.0, 30.0, 30.0], [40.0, 30.0, 60.0, 30.0, 30.0, 30.0, 40.0, 50.0, 40.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 60.0, 40.0, 50.0, 50.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [20.0, 30.0, 40.0, 20.0, 20.0, 10.0, 10.0, 30.0, 30.0, 10.0, 30.0, 10.0, 20.0, 20.0, 20.0, 20.0, 20.0, 30.0, 40.0, 20.0, 20.0], [40.0, 20.0, 50.0, 50.0, 30.0, 40.0, 40.0, 40.0, 40.0, 60.0, 50.0, 60.0, 50.0, 60.0, 40.0, 50.0, 40.0, 30.0, 40.0, 50.0, 40.0], [30.0, 20.0, 50.0, 40.0, 50.0, 30.0, 30.0, 40.0, 30.0, 40.0, 40.0, 40.0, 50.0, 40.0, 30.0, 30.0, 30.0, 30.0, 40.0, 30.0, 30.0], [50.0, 30.0, 50.0, 50.0, 30.0, 50.0, 50.0, 40.0, 40.0, 60.0, 60.0, 60.0, 50.0, 60.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 50.0], [40.0, 40.0, 30.0, 30.0, 40.0, 40.0, 40.0, 30.0, 20.0, 30.0, 40.0, 30.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 30.0, 50.0, 60.0, 50.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0, 50.0, 40.0, 40.0], [40.0, 20.0, 50.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [40.0, 20.0, 50.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0], [30.0, 20.0, 50.0, 40.0, 40.0, 30.0, 30.0, 40.0, 30.0, 50.0, 50.0, 50.0, 60.0, 50.0, 40.0, 50.0, 40.0, 30.0, 40.0, 40.0, 30.0], [40.0, 30.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 30.0, 50.0, 60.0, 50.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0, 50.0, 40.0, 40.0], [50.0, 30.0, 50.0, 50.0, 30.0, 50.0, 50.0, 40.0, 20.0, 50.0, 50.0, 50.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 50.0, 50.0, 50.0], [40.0, 30.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [30.0, 20.0, 50.0, 40.0, 40.0, 30.0, 30.0, 40.0, 30.0, 50.0, 50.0, 50.0, 60.0, 50.0, 30.0, 40.0, 40.0, 30.0, 40.0, 30.0, 30.0], [30.0, 20.0, 40.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 30.0, 30.0], [40.0, 20.0, 50.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0], [40.0, 20.0, 50.0, 40.0, 40.0, 30.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0], [30.0, 20.0, 50.0, 40.0, 50.0, 30.0, 30.0, 40.0, 30.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0], [40.0, 30.0, 50.0, 40.0, 40.0, 40.0, 50.0, 40.0, 20.0, 50.0, 50.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0, 40.0, 50.0, 40.0, 40.0], [30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 20.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0], [40.0, 30.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [40.0, 30.0, 50.0, 40.0, 30.0, 30.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0]]


femaleMatrix =[[30.0, 40.0, 50.0, 70.0, 70.0, 30.0, 40.0, 60.0, 50.0, 40.0, 50.0, 50.0, 60.0, 40.0, 50.0, 40.0, 30.0, 40.0, 40.0, 40.0, 40.0], [20.0, 40.0, 30.0, 30.0, 30.0, 30.0, 30.0, 30.0, 40.0, 30.0, 40.0, 30.0, 30.0, 30.0, 40.0, 30.0, 40.0, 40.0, 30.0, 20.0, 40.0], [30.0, 40.0, 50.0, 60.0, 50.0, 40.0, 40.0, 60.0, 40.0, 40.0, 40.0, 50.0, 60.0, 40.0, 60.0, 50.0, 50.0, 40.0, 50.0, 50.0, 40.0], [40.0, 50.0, 50.0, 70.0, 60.0, 40.0, 50.0, 70.0, 40.0, 40.0, 60.0, 60.0, 60.0, 50.0, 50.0, 50.0, 40.0, 60.0, 60.0, 50.0, 60.0], [30.0, 40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 60.0, 40.0, 40.0, 30.0, 50.0, 60.0, 40.0, 60.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 30.0, 50.0, 30.0, 40.0, 30.0, 40.0, 50.0, 40.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [20.0, 40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0, 40.0, 50.0, 50.0, 40.0, 50.0, 50.0, 50.0, 40.0, 40.0, 50.0, 40.0], [30.0, 40.0, 30.0, 40.0, 30.0, 20.0, 30.0, 40.0, 40.0, 40.0, 40.0, 40.0, 30.0, 30.0, 40.0, 30.0, 40.0, 40.0, 30.0, 30.0, 40.0], [20.0, 20.0, 40.0, 40.0, 40.0, 30.0, 30.0, 40.0, 20.0, 20.0, 30.0, 30.0, 40.0, 20.0, 40.0, 30.0, 30.0, 20.0, 30.0, 30.0, 20.0], [30.0, 40.0, 40.0, 50.0, 40.0, 40.0, 30.0, 50.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 60.0, 40.0, 40.0, 40.0, 50.0, 40.0, 30.0], [30.0, 40.0, 40.0, 60.0, 60.0, 30.0, 30.0, 60.0, 50.0, 40.0, 40.0, 50.0, 60.0, 50.0, 50.0, 40.0, 30.0, 40.0, 50.0, 30.0, 40.0], [40.0, 40.0, 50.0, 60.0, 50.0, 50.0, 40.0, 60.0, 30.0, 40.0, 50.0, 50.0, 50.0, 40.0, 60.0, 50.0, 50.0, 40.0, 60.0, 50.0, 50.0], [30.0, 50.0, 50.0, 40.0, 40.0, 50.0, 20.0, 40.0, 30.0, 30.0, 30.0, 30.0, 40.0, 30.0, 60.0, 30.0, 40.0, 30.0, 50.0, 30.0, 30.0], [30.0, 40.0, 40.0, 40.0, 30.0, 50.0, 30.0, 40.0, 30.0, 40.0, 40.0, 30.0, 30.0, 30.0, 50.0, 40.0, 50.0, 40.0, 40.0, 40.0, 40.0], [30.0, 30.0, 30.0, 40.0, 30.0, 20.0, 20.0, 40.0, 40.0, 40.0, 20.0, 30.0, 40.0, 30.0, 50.0, 30.0, 30.0, 30.0, 40.0, 30.0, 30.0], [40.0, 40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 60.0, 30.0, 40.0, 40.0, 50.0, 50.0, 40.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [30.0, 40.0, 50.0, 50.0, 40.0, 40.0, 30.0, 50.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [20.0, 50.0, 40.0, 50.0, 40.0, 30.0, 40.0, 50.0, 50.0, 40.0, 40.0, 50.0, 50.0, 50.0, 40.0, 40.0, 30.0, 50.0, 40.0, 40.0, 50.0], [40.0, 40.0, 50.0, 50.0, 40.0, 40.0, 50.0, 60.0, 40.0, 50.0, 50.0, 60.0, 50.0, 40.0, 50.0, 50.0, 50.0, 50.0, 50.0, 60.0, 50.0], [30.0, 40.0, 50.0, 50.0, 40.0, 50.0, 40.0, 50.0, 30.0, 40.0, 40.0, 40.0, 50.0, 30.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [20.0, 40.0, 50.0, 40.0, 40.0, 60.0, 40.0, 40.0, 30.0, 30.0, 50.0, 40.0, 40.0, 40.0, 50.0, 50.0, 50.0, 50.0, 50.0, 40.0, 50.0], [30.0, 40.0, 40.0, 60.0, 50.0, 30.0, 40.0, 60.0, 40.0, 30.0, 40.0, 50.0, 60.0, 50.0, 40.0, 40.0, 20.0, 40.0, 50.0, 40.0, 50.0], [30.0, 40.0, 50.0, 50.0, 50.0, 60.0, 40.0, 50.0, 40.0, 40.0, 50.0, 50.0, 50.0, 50.0, 40.0, 50.0, 40.0, 50.0, 60.0, 60.0, 50.0], [30.0, 30.0, 30.0, 50.0, 50.0, 20.0, 30.0, 50.0, 50.0, 40.0, 30.0, 40.0, 50.0, 40.0, 50.0, 30.0, 30.0, 40.0, 40.0, 30.0, 30.0], [30.0, 40.0, 40.0, 50.0, 40.0, 40.0, 30.0, 50.0, 40.0, 40.0, 30.0, 40.0, 50.0, 40.0, 60.0, 40.0, 40.0, 40.0, 50.0, 40.0, 40.0], [30.0, 40.0, 50.0, 60.0, 60.0, 30.0, 50.0, 70.0, 50.0, 40.0, 40.0, 60.0, 70.0, 50.0, 50.0, 40.0, 30.0, 50.0, 50.0, 40.0, 40.0], [50.0, 50.0, 50.0, 70.0, 60.0, 40.0, 50.0, 70.0, 50.0, 50.0, 60.0, 60.0, 60.0, 50.0, 60.0, 50.0, 50.0, 60.0, 60.0, 50.0, 60.0], [40.0, 40.0, 50.0, 50.0, 40.0, 40.0, 30.0, 50.0, 30.0, 40.0, 30.0, 50.0, 50.0, 40.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [40.0, 40.0, 50.0, 50.0, 40.0, 40.0, 40.0, 60.0, 30.0, 40.0, 40.0, 50.0, 50.0, 30.0, 60.0, 40.0, 50.0, 40.0, 50.0, 40.0, 40.0], [30.0, 50.0, 50.0, 70.0, 60.0, 40.0, 50.0, 70.0, 50.0, 40.0, 50.0, 60.0, 70.0, 60.0, 50.0, 50.0, 40.0, 50.0, 60.0, 50.0, 60.0]]

# # print(len(maleMatrix),len(maleMatrix[0]))
# # print(len(femaleMtrix),len(femaleMtrix[0]))
# avg =[[0 for _ in range(len(femaleMtrix[0]))] for _ in range(len(femaleMtrix))]
# for j in range(len(maleMatrix)) :
#     for i in range(0,len(maleMatrix[0])):
#         avg[j][i] =int((femaleMtrix[j][i]+maleMatrix[j][i])/2)
    
# print(avg)

import numpy as np

maleMatrix = [
    [10, 20, 30],
    [40, 50, 60],
    [70, 80, 90],
    [15, 35, 55],
    [25, 45, 65]
]

femaleMatrix = [
    [12, 22, 32],
    [42, 52, 62],
    [72, 82, 50],
    [18, 38, 58],
    [28, 48, 68]
]

def calculate_element_stats(matrix1, matrix2):
    combined_averages = []
    combined_variances = []
    
    for row1, row2 in zip(matrix1, matrix2):
        avg_row = [(val1 + val2) / 2 for val1, val2 in zip(row1, row2)]
        var_row = [np.var([val1, val2]) for val1, val2 in zip(row1, row2)]
        combined_averages.append(avg_row)
        combined_variances.append(var_row)
    
    return combined_averages, combined_variances

def flatten(matrix):
    return [item for sublist in matrix for item in sublist]

def normalize(values):
    min_val = min(values)
    max_val = max(values)
    return [(val - min_val) / (max_val - min_val) if max_val != min_val else 0 for val in values]

def combine_scores(averages, variances, weight_average=1, weight_variance=1):
    combined_scores = [weight_average * avg - weight_variance * var for avg, var in zip(averages, variances)]
    return combined_scores

# Calculate element-wise stats for maleMatrix and femaleMatrix
combined_averages, combined_variances = calculate_element_stats(maleMatrix, femaleMatrix)
print(f'combined_averages{combined_averages}')
print(f'combined_variances{combined_averages}')
# Flatten the matrices to work with 1D arrays for normalization and sorting
flattened_averages = flatten(combined_averages)
flattened_variances = flatten(combined_variances)

# Normalize the flattened arrays
normalized_averages = normalize(flattened_averages)
normalized_variances = normalize(flattened_variances)

# Calculate combined scores
combined_scores = combine_scores(normalized_averages, normalized_variances)

# Reconstruct the matrix indices
indices = [(i, j) for i in range(len(maleMatrix)) for j in range(len(maleMatrix[0]))]


# Sort indices based on combined scores
sorted_indices = sorted(indices, key=lambda idx: combined_scores[indices.index(idx)], reverse=True)
print(f'sorted_indices {sorted_indices}')
print(f'sorted_indices {len(sorted_indices)}')
# Create sorted matrices based on combined scores
sorted_maleMatrix = [[0] * len(maleMatrix[0]) for _ in range(len(maleMatrix))]
sorted_femaleMatrix = [[0] * len(femaleMatrix[0]) for _ in range(len(femaleMatrix))]

for rank, (i, j) in enumerate(sorted_indices):
    sorted_maleMatrix[rank // len(maleMatrix[0])][rank % len(maleMatrix[0])] = maleMatrix[i][j]
    sorted_femaleMatrix[rank // len(femaleMatrix[0])][rank % len(femaleMatrix[0])] = femaleMatrix[i][j]

print("Sorted Male Matrix:")
for row in sorted_maleMatrix:
    print(row)

print("\nSorted Female Matrix:")
for row in sorted_femaleMatrix:
    print(row)
