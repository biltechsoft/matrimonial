from django.db import models
from django.db.models.base import Model

# Create your models here.


class AdminUser(models.Model):
    adminId = models.AutoField(primary_key=True)
    adminUserName=models.CharField(max_length=500,null=True)
    adminPass=models.CharField(max_length=500,null=True)
    adminFullName=models.CharField(max_length=500,null=True)
    adminLevel=models.CharField(max_length=500,null=True)
    adminStatus=models.CharField(max_length=500,null=True)
    adminToken=models.CharField(max_length=100,null=True)
    
#Admin activity log   
class AdminLog(models.Model):
    logId = models.AutoField(primary_key=True)
    adminId=models.IntegerField(null=True)
    userId=models.IntegerField(null=True)
    xuserId=models.IntegerField(null=True)  #for matching id
    userType=models.IntegerField(null=True)  #Male=1, Female=2
    action=models.IntegerField(null=True)  #select from actionType
    description=models.CharField(max_length=1000,null=True)
    note=models.IntegerField(null=True)    #select from rejectionNote
    actionTime=models.DateTimeField()

    
#user messages and their replies
class Message(models.Model):
    messageId = models.AutoField(primary_key=True)
    senderId=models.CharField(max_length=100,null=True) #id if registered user, else Name for anonymous user
    userType=models.IntegerField(null=True,blank=True) #Male=1,Female=2,Anonymous=3, Admin=0
    senderEmail=models.CharField(max_length=100,null=True,blank=True)
    messageDetail=models.CharField(max_length=5000)
    messageReply=models.CharField(max_length=5000,null=True,blank=True)
    dateTime=models.DateTimeField()
    replyDateTime=models.DateTimeField(null=True,blank=True)

#temp user table before email verification
#created by Maruf
class TempUser(models.Model):
    tempId = models.AutoField(primary_key=True)
    tempName=models.CharField(max_length=100,null=True)
    tempPass=models.CharField(max_length=100,null=True)
    tempEmail=models.CharField(max_length=100,null=True)
    tempGender=models.CharField(max_length=20,null=True)
    #tempDateOfBirth=models.DateField(null=True)
    tempBirthYear=models.IntegerField(blank=True,null=True)
    tempState=models.CharField(max_length=100,null=True)
    tempCellPhone=models.CharField(max_length=100,null=True)
    tempVeriCode=models.CharField(max_length=100,null=True)
    tempDateTime=models.DateTimeField(null=True)
    
#convention user table for only using in MUNA convention
#created by Maruf
'''class TempUser(models.Model):
    userId=models.AutoField(primary_key=True)
    fullName=models.CharField(max_length=100,null=True)
    gender=models.CharField(max_length=100,null=True)
    address=models.CharField(max_length=500,null=True)
    state=models.CharField(max_length=100,null=True)
    cellPhone=models.CharField(max_length=100,null=True)
    email=models.CharField(max_length=100,null=True)
    birthYear=models.IntegerField(blank=True,null=True)
    height=models.IntegerField(blank=True,null=True)
    weight=models.IntegerField(blank=True,null=True)
    immigrationStatus=models.CharField(max_length=100,null=True)'''

class MaleUser(models.Model):
    userId=models.AutoField(primary_key=True)
    fullName=models.CharField(max_length=100,null=True)
    nickName=models.CharField(max_length=100,null=True)
    gender=models.CharField(max_length=100,null=True)
    address=models.CharField(max_length=500,null=True)
    city=models.CharField(max_length=100,null=True)
    state=models.CharField(max_length=100,null=True)
    zip=models.CharField(max_length=100,null=True)
    cellPhone=models.CharField(max_length=100,null=True)
    workPhone=models.CharField(max_length=100,null=True,blank=True)
    homePhone=models.CharField(max_length=100,null=True,blank=True)
    email=models.CharField(max_length=100,null=True)
    personalWebsite=models.CharField(max_length=200,null=True)
    birthYear=models.IntegerField(blank=True,null=True)
    age=models.IntegerField(blank=True,null=True)
    dateOfBirth=models.DateField(null=True)
    height=models.IntegerField(blank=True,null=True)
    weight=models.IntegerField(blank=True,null=True)
    placeOfBirth=models.CharField(max_length=100,null=True)
    health=models.CharField(max_length=500,null=True)
    maritalStatus=models.CharField(max_length=100,null=True)
    children=models.CharField(max_length=100,null=True)
    childrenNumber=models.IntegerField(blank=True,null=True)
    childrenAges=models.CharField(max_length=100,null=True)
    immigrationStatus=models.CharField(max_length=100,null=True)
    immigrationStatusOther=models.CharField(max_length=100,null=True)
    highSchool=models.CharField(max_length=100,null=True)
    highSchoolYear=models.IntegerField(blank=True,null=True)
    bachelors=models.CharField(max_length=100,null=True)
    bachelorsYear=models.IntegerField(blank=True,null=True)
    masters=models.CharField(max_length=100,null=True)
    mastersYear=models.IntegerField(blank=True,null=True)
    doctorate=models.CharField(max_length=100,null=True)
    doctorateYear=models.IntegerField(blank=True,null=True)
    otherDegree=models.CharField(max_length=200,null=True)
    otherDegreeYear=models.IntegerField(blank=True,null=True)
    highestEducation=models.CharField(max_length=100,null=True)
    employed=models.CharField(max_length=100,null=True)
    employment=models.CharField(max_length=100,null=True)
    position=models.CharField(max_length=100,null=True)
    income=models.IntegerField(blank=True,null=True)
    religiousPractice=models.CharField(max_length=100,null=True)
    religiousPracticeOther=models.CharField(max_length=100,null=True)
    religiousPracticeBrief=models.CharField(max_length=500,null=True)
    revertTime=models.CharField(max_length=100,null=True)
    beard=models.CharField(max_length=100,null=True)
    smoker=models.CharField(max_length=100,null=True)
    preReligious=models.CharField(max_length=100,null=True)
    preReligiousOther=models.CharField(max_length=100,null=True)
    preReligiousBrief=models.CharField(max_length=500,null=True)
    preWear=models.CharField(max_length=100,null=True)
    preSmoking=models.CharField(max_length=100,null=True)
    preEthnic=models.CharField(max_length=100,null=True)
    preEthnicSpecific=models.CharField(max_length=500,null=True)
    preImmigrationStatus=models.CharField(max_length=100,null=True)
    preImmigrationStatusOther=models.CharField(max_length=100,null=True)
    preMaritalStatus=models.CharField(max_length=100,null=True)
    preChildren=models.CharField(max_length=100,null=True)
    preEducation=models.CharField(max_length=100,null=True)
    preEmployment=models.CharField(max_length=100,null=True)
    preIncome=models.IntegerField(blank=True,null=True)
    preAgeGap=models.IntegerField(blank=True,null=True)
    guarName=models.CharField(max_length=100,null=True)
    guarAddress=models.CharField(max_length=500,null=True)
    guarCity=models.CharField(max_length=100,null=True)
    guarState=models.CharField(max_length=100,null=True)
    guarCountry=models.CharField(max_length=100,null=True)
    guarPhone=models.CharField(max_length=100,null=True)
    guarEmail=models.CharField(max_length=100,null=True)
    guarProfession=models.CharField(max_length=100,null=True)
    familyBrief=models.CharField(max_length=500,null=True)
    refName1=models.CharField(max_length=100,null=True)
    refRelation1=models.CharField(max_length=100,null=True)
    refPhone1=models.CharField(max_length=100,null=True)
    refName2=models.CharField(max_length=100,null=True)
    refRelation2=models.CharField(max_length=100,null=True)
    refPhone2=models.CharField(max_length=100,null=True)
    refName3=models.CharField(max_length=100,null=True)
    refRelation3=models.CharField(max_length=100,null=True)
    refPhone3=models.CharField(max_length=100,null=True)
    photo=models.CharField(max_length=500,null=True)
    cv=models.CharField(max_length=500,null=True)
    album=models.CharField(max_length=500,null=True)
    gallery=models.CharField(max_length=2000,null=True)
    tempGallery=models.CharField(max_length=2000,null=True)
    govIssuedId=models.CharField(max_length=500,null=True)
    signature=models.CharField(max_length=500,null=True)
    matchShowLimit=models.IntegerField(null=True)
    lockedId=models.IntegerField(null=True)
    reqLock=models.IntegerField(null=True)
    matchId=models.CharField(max_length=100,null=True)
    matchPercentage=models.CharField(max_length=100,null=True)
    cuMatchId=models.CharField(max_length=1000,null=True)
    reqSent=models.CharField(max_length=100,null=True)
    reqAccepted=models.CharField(max_length=100,null=True)
    reqRejected=models.CharField(max_length=100,null=True)
    #rec=models.SET()
    userPass=models.CharField(max_length=200,null=True)
    status=models.CharField(max_length=100,null=True) #Inactive/Active/Deactivated
    profileCompleteness=models.IntegerField(blank=True,null=True)
    openingDate=models.DateTimeField(null=True)
    lastEdit=models.DateTimeField(null=True)
    userToken=models.CharField(max_length=100,null=True)
    def __str__(self):
        return str(self.userId)



class FemaleUser (models.Model):
    userId=models.AutoField(primary_key=True)
    fullName=models.CharField(max_length=100,null=True)
    nickName=models.CharField(max_length=100,null=True)
    gender=models.CharField(max_length=100,null=True)
    address=models.CharField(max_length=500,null=True)
    city=models.CharField(max_length=100,null=True)
    state=models.CharField(max_length=100,null=True)
    zip=models.CharField(max_length=100,null=True)
    cellPhone=models.CharField(max_length=100,null=True)
    workPhone=models.CharField(max_length=100,null=True,blank=True)
    homePhone=models.CharField(max_length=100,null=True,blank=True)
    email=models.CharField(max_length=100,null=True)
    personalWebsite=models.CharField(max_length=200,null=True)
    birthYear=models.IntegerField(blank=True,null=True)
    age=models.IntegerField(blank=True,null=True)
    dateOfBirth=models.DateField(null=True)
    height=models.IntegerField(blank=True,null=True)
    weight=models.IntegerField(blank=True,null=True)
    placeOfBirth=models.CharField(max_length=100,null=True)
    health=models.CharField(max_length=500,null=True)
    maritalStatus=models.CharField(max_length=100,null=True)
    children=models.CharField(max_length=100,null=True)
    childrenNumber=models.IntegerField(blank=True,null=True)
    childrenAges=models.CharField(max_length=100,null=True)
    immigrationStatus=models.CharField(max_length=100,null=True)
    immigrationStatusOther=models.CharField(max_length=100,null=True)
    highSchool=models.CharField(max_length=100,null=True)
    highSchoolYear=models.IntegerField(blank=True,null=True)
    bachelors=models.CharField(max_length=100,null=True)
    bachelorsYear=models.IntegerField(blank=True,null=True)
    masters=models.CharField(max_length=100,null=True)
    mastersYear=models.IntegerField(blank=True,null=True)
    doctorate=models.CharField(max_length=100,null=True)
    doctorateYear=models.IntegerField(blank=True,null=True)
    otherDegree=models.CharField(max_length=200,null=True)
    otherDegreeYear=models.IntegerField(blank=True,null=True)
    highestEducation=models.CharField(max_length=100,null=True)
    employed=models.CharField(max_length=100,null=True)
    employment=models.CharField(max_length=100,null=True)
    position=models.CharField(max_length=100,null=True)
    income=models.IntegerField(blank=True,null=True)
    religiousPractice=models.CharField(max_length=100,null=True)
    religiousPracticeOther=models.CharField(max_length=100,null=True)
    religiousPracticeBrief=models.CharField(max_length=500,null=True)
    revertTime=models.CharField(max_length=100,null=True)
    wear=models.CharField(max_length=100,null=True)
    smoker=models.CharField(max_length=100,null=True)
    preReligious=models.CharField(max_length=100,null=True)
    preReligiousOther=models.CharField(max_length=100,null=True)
    preReligiousBrief=models.CharField(max_length=500,null=True)
    preBeard=models.CharField(max_length=100,null=True)
    preSmoking=models.CharField(max_length=100,null=True)
    preEthnic=models.CharField(max_length=100,null=True)
    preEthnicSpecific=models.CharField(max_length=500,null=True)
    preImmigrationStatus=models.CharField(max_length=100,null=True)
    preImmigrationStatusOther=models.CharField(max_length=100,null=True)
    preMaritalStatus=models.CharField(max_length=100,null=True)
    preChildren=models.CharField(max_length=100,null=True)
    preEducation=models.CharField(max_length=100,null=True)
    preEmployment=models.CharField(max_length=100,null=True)
    preIncome=models.IntegerField(blank=True,null=True)
    preAgeGap=models.IntegerField(blank=True,null=True)
    guarName=models.CharField(max_length=100,null=True)
    guarAddress=models.CharField(max_length=500,null=True)
    guarCity=models.CharField(max_length=100,null=True)
    guarState=models.CharField(max_length=100,null=True)
    guarCountry=models.CharField(max_length=100,null=True)
    guarPhone=models.CharField(max_length=100,null=True)
    guarEmail=models.CharField(max_length=100,null=True)
    guarProfession=models.CharField(max_length=100,null=True)
    familyBrief=models.CharField(max_length=500,null=True)
    refName1=models.CharField(max_length=100,null=True)
    refRelation1=models.CharField(max_length=100,null=True)
    refPhone1=models.CharField(max_length=100,null=True)
    refName2=models.CharField(max_length=100,null=True)
    refRelation2=models.CharField(max_length=100,null=True)
    refPhone2=models.CharField(max_length=100,null=True)
    refName3=models.CharField(max_length=100,null=True)
    refRelation3=models.CharField(max_length=100,null=True)
    refPhone3=models.CharField(max_length=100,null=True)
    photo=models.CharField(max_length=500,null=True)
    cv=models.CharField(max_length=500,null=True)
    album=models.CharField(max_length=500,null=True)
    gallery=models.CharField(max_length=2000,null=True)
    tempGallery=models.CharField(max_length=2000,null=True)
    govIssuedId=models.CharField(max_length=500,null=True)
    signature=models.CharField(max_length=500,null=True)
    matchShowLimit=models.IntegerField(blank=True,null=True)
    lockedId=models.IntegerField(null=True)
    reqLock=models.IntegerField(null=True)
    matchId=models.CharField(max_length=100,null=True)
    matchPercentage=models.CharField(max_length=100,null=True)
    cuMatchId=models.CharField(max_length=1000,null=True)
    reqSent=models.CharField(max_length=100,null=True)
    reqAccepted=models.CharField(max_length=100,null=True)
    reqRejected=models.CharField(max_length=100,null=True)
    #rec=models.SET()
    userPass=models.CharField(max_length=200,null=True)
    status=models.CharField(max_length=100,null=True)  #Inactive/Active/Deactivated
    profileCompleteness=models.IntegerField(blank=True,null=True)
    openingDate=models.DateTimeField(null=True)
    lastEdit=models.DateTimeField(null=True)
    userToken=models.CharField(max_length=100,null=True)
    def __str__(self):
        return str(self.userId)

class MatchingTable(models.Model):
    matchingId = models.AutoField(primary_key=True)
    matchingIndicator=models.CharField(max_length=500,null=True)
    matchingDetails=models.CharField(max_length=500,null=True)
    malePoint=models.IntegerField(blank=True,null=True)
    femalePoint=models.IntegerField(blank=True,null=True)
    # def __str__(self):
    #     return str(self.)

class Post(models.Model):
    postId=models.AutoField(primary_key=True)
    postCode=models.CharField(max_length=4,null=False)
    postType=models.CharField(max_length=200,null=True)
    pageTitle=models.CharField(max_length=200,null=True)
    postDetails=models.CharField(max_length=4000,null=True)
    param1=models.CharField(max_length=4000,null=True)
    param2=models.CharField(max_length=4000,null=True)
    param3=models.CharField(max_length=4000,null=True)
    param4=models.CharField(max_length=4000,null=True)
    param5=models.CharField(max_length=4000,null=True)
    postPhoto=models.CharField(max_length=200,null=True)
    postStatus=models.CharField(max_length=200,null=True)

class MatchMaking(models.Model):
    class Status(models.IntegerChoices):
        Normal =0,"Normal"
        ReqSent=1,"ReqSent"
        ReqPending=2,"ReqPending"
        ReqAccepted=3,"ReqAccepted"
        ReqRejected=4,"ReqRejected"
        Lock_req=5,"Lock_req"
        Locked=6,"Locked"

    id = models.AutoField(primary_key=True)
    maleId = models.ForeignKey(MaleUser,on_delete=models.CASCADE, null=True)
    femaleId = models.ForeignKey(FemaleUser,on_delete=models.CASCADE, null=True)
    percentage=models.IntegerField(default=0,null=True)
    statusMale=models.IntegerField(choices=Status.choices , default=Status.Normal)
    
