import { Component, OnInit } from '@angular/core';
import { HttpClient } from '@angular/common/http';

@Component({
  selector: 'app-maleuser',
  templateUrl: './maleuser.component.html',
  styleUrls: ['./maleuser.component.css']
})
export class MaleuserComponent implements OnInit {

  API_URL= "http://127.0.0.1:8000/";
  PHOTO_URL= "http://127.0.0.1:8000/photos/";

  constructor(private http:HttpClient) { }
  maleusers: any=  [];
  modalTitle="";
  MaleId=0;
  FullName=null;
  NickName=null;
  Gender=null;
  Address=null;
  City=null;
  State=null;
  Zip=null;
  CellPhone=null;
  WorkPhone=null;
  HomePhone=null;
  Email=null;
  PersonalWebsite=null;
  Age=null;
  DateOfBirth=null;
  Height=null;
  Weight=null;
  PlaceOfBirth=null;
  Health=null;
  MaritalStatus=null;
  Children=null;
  ChildrenNumber=null;
  ChildrenAges=null;
  ImmigrationStatus=null;
  HighSchool=null;
  HighSchoolYear=null;
  Bachelors=null;
  BachelorsYear=null;
  Masters=null;
  MastersYear=null;
  Doctorate=null;
  DoctorateYear=null;
  OtherDegree=null;
  OtherDegreeYear=null;
  Employed=null;
  Employment=null;
  Position=null;
  Income=null;
  ReligiousPractice=null;
  ReligiousPracticeBrief=null;
  RevertTime=null;
  Beard=null;
  Smoker=null;
  PreReligious=null;
  PreReligiousBrief=null;
  PreWear=null;
  PreSmoking=null;
  PreEthnic=null;
  PreEthnicSpecific=null;
  PreImmigrationStatus=null;
  PreMaritalStatus=null;
  PreChildren=null;
  PreEducation=null;
  PreEmployment=null;
  PreIncome=null;
  PreAgeGap=null;
  GuarName=null;
  GuarAddress=null;
  GuarCity=null;
  GuarState=null;
  GuarCountry=null;
  GuarPhone=null;
  GuarEmail=null;
  GuarProfession=null;
  FamilyBrief=null;
  RefName1=null;
  RefRelation1=null;
  RefPhone1=null;
  RefName2=null;
  RefRelation2=null;
  RefPhone2=null;
  RefName3=null;
  RefRelation3=null;
  RefPhone3=null;
  Photo=null;
  Cv=null;
  Album=null;
  GovIssuedId=null;
  MatchShowLimit=5;
  UserPass=null;
  Status=null;
  //#OpeningDate:number = Date.now();
  OpeningDate=null;
  LastEdit=null;


  ngOnInit(): void {  this.refreshList();
  }
  refreshList(){
    this.http.get<any>(this.API_URL+'maleuser')
    .subscribe(data=>{
        this.maleusers=data;
    });
    }



    addClick(){
      this.modalTitle="Add Male User";
      this.MaleId=0;;
      this.MatchShowLimit=5;
      this.Status="Inactive";
      this.OpeningDate='0001-01-11 00:00:00.000000';
      this.LastEdit='0001-01-11 00:00:00.000000';

    }

    editClick(male:any){
      this.modalTitle="Edit Male User";
      this.MaleId=male.maleId;
      this.FullName=male.fullName;
      this.NickName=male.nickName;
      this.Gender=male.gender;
      this.Address=male.address;
      this.City=male.city;
      this.State=male.state;
      this.Zip=male.zip;
      this.CellPhone=male.cellPhone;
      this.WorkPhone=male.workPhone;
      this.HomePhone=male.homePhone;
      this.Email=male.email;
      this.PersonalWebsite=male.personalWebsite;
      this.Age=male.age;
      this.DateOfBirth=male.dateOfBirth;
      this.Height=male.height;
      this.Weight=male.weight;
      this.PlaceOfBirth=male.placeOfBirth;
      this.Health=male.health;
      this.MaritalStatus=male.maritalStatus;
      this.Children=male.children;
      this.ChildrenNumber=male.childrenNumber;
      this.ChildrenAges=male.childrenAges;
      this.ImmigrationStatus=male.immigrationStatus;
      this.HighSchool=male.highSchool;
      this.HighSchoolYear=male.highSchoolYear;
      this.Bachelors=male.bachelors;
      this.BachelorsYear=male.bachelorsYear;
      this.Masters=male.masters;
      this.MastersYear=male.mastersYear;
      this.Doctorate=male.doctorate;
      this.DoctorateYear=male.doctorateYear;
      this.OtherDegree=male.otherDegree;
      this.OtherDegreeYear=male.otherDegreeYear;
      this.Employed=male.employed;
      this.Employment=male.employment;
      this.Position=male.position;
      this.Income=male.income;
      this.ReligiousPractice=male.religiousPractice;
      this.ReligiousPracticeBrief=male.religiousPracticeBrief;
      this.RevertTime=male.revertTime;
      this.Beard=male.beard;
      this.Smoker=male.smoker;
      this.PreReligious=male.preReligious;
      this.PreReligiousBrief=male.preReligiousBrief;
      this.PreWear=male.preWear;
      this.PreSmoking=male.preSmoking;
      this.PreEthnic=male.preEthnic;
      this.PreEthnicSpecific=male.preEthnicSpecific;
      this.PreImmigrationStatus=male.preImmigrationStatus;
      this.PreMaritalStatus=male.preMaritalStatus;
      this.PreChildren=male.preChildren;
      this.PreEducation=male.preEducation;
      this.PreEmployment=male.preEmployment;
      this.PreIncome=male.preIncome;
      this.PreAgeGap=male.preAgeGap;
      this.GuarName=male.guarName;
      this.GuarAddress=male.guarAddress;
      this.GuarCity=male.guarCity;
      this.GuarState=male.guarState;
      this.GuarCountry=male.guarCountry;
      this.GuarPhone=male.guarPhone;
      this.GuarEmail=male.guarEmail;
      this.GuarProfession=male.guarProfession;
      this.FamilyBrief=male.familyBrief;
      this.RefName1=male.refName1;
      this.RefRelation1=male.refRelation1;
      this.RefPhone1=male.refPhone1;
      this.RefName2=male.refName2;
      this.RefRelation2=male.refRelation2;
      this.RefPhone2=male.refPhone2;
      this.RefName3=male.refName3;
      this.RefRelation3=male.refRelation3;
      this.RefPhone3=male.refPhone3;
      this.Photo=male.photo;
      this.Cv=male.cv;
      this.Album=male.album;
      this.GovIssuedId=male.govIssuedId;
      this.MatchShowLimit=male.matchShowLimit;
      this.UserPass=male.user_Pass;
      this.Status=male.status;
      this.OpeningDate=male.openingDate;
      this.LastEdit=male.lastEdit;

    }

     createClick(){
      var val={
        fullName:this.FullName,
        nickName:this.NickName,
        gender:this.Gender,
        address:this.Address,
        city:this.City,
        state:this.State,
        zip:this.Zip,
        cellPhone:this.CellPhone,
        workPhone:this.WorkPhone,
        homePhone:this.HomePhone,
        email:this.Email,
        personalWebsite:this.PersonalWebsite,
        age:this.Age,
        dateOfBirth:this.DateOfBirth,
        height:this.Height,
        weight:this.Weight,
        placeOfBirth:this.PlaceOfBirth,
        health:this.Health,
        maritalStatus:this.MaritalStatus,
        children:this.Children,
        childrenNumber:this.ChildrenNumber,
        childrenAges:this.ChildrenAges,
        immigrationStatus:this.ImmigrationStatus,
        highSchool:this.HighSchool,
        highSchoolYear:this.HighSchoolYear,
        bachelors:this.Bachelors,
        bachelorsYear:this.BachelorsYear,
        masters:this.Masters,
        mastersYear:this.MastersYear,
        doctorate:this.Doctorate,
        doctorateYear:this.DoctorateYear,
        otherDegree:this.OtherDegree,
        otherDegreeYear:this.OtherDegreeYear,
        employed:this.Employed,
        employment:this.Employment,
        position:this.Position,
        income:this.Income,
        religiousPractice:this.ReligiousPractice,
        religiousPracticeBrief:this.ReligiousPracticeBrief,
        revertTime:this.RevertTime,
        beard:this.Beard,
        smoker:this.Smoker,
        preReligious:this.PreReligious,
        preReligiousBrief:this.PreReligiousBrief,
        preWear:this.PreWear,
        preSmoking:this.PreSmoking,
        preEthnic:this.PreEthnic,
        preEthnicSpecific:this.PreEthnicSpecific,
        preImmigrationStatus:this.PreImmigrationStatus,
        preMaritalStatus:this.PreMaritalStatus,
        preChildren:this.PreChildren,
        preEducation:this.PreEducation,
        preEmployment:this.PreEmployment,
        preIncome:this.PreIncome,
        preAgeGap:this.PreAgeGap,
        guarName:this.GuarName,
        guarAddress:this.GuarAddress,
        guarCity:this.GuarCity,
        guarState:this.GuarState,
        guarCountry:this.GuarCountry,
        guarPhone:this.GuarPhone,
        guarEmail:this.GuarEmail,
        guarProfession:this.GuarProfession,
        familyBrief:this.FamilyBrief,
        refName1:this.RefName1,
        refRelation1:this.RefRelation1,
        refPhone1:this.RefPhone1,
        refName2:this.RefName2,
        refRelation2:this.RefRelation2,
        refPhone2:this.RefPhone2,
        refName3:this.RefName3,
        refRelation3:this.RefRelation3,
        refPhone3:this.RefPhone3,
        photo:this.Photo,
        cv:this.Cv,
        album:this.Album,
        govIssuedId:this.GovIssuedId,
        matchShowLimit:this.MatchShowLimit,
        userPass:this.UserPass,
        status:this.Status,
        openingDate:this.OpeningDate,
        lastEdit:this.LastEdit
      };

      this.http.post(this.API_URL+'maleuser',val)
      .subscribe(res=>{
        alert(res.toString());
        this.refreshList();
      });
    }

    updateClick(){
      var val={
        maleId:this.MaleId,
        fullName:this.FullName,
        nickName:this.NickName,
        gender:this.Gender,
        address:this.Address,
        city:this.City,
        state:this.State,
        zip:this.Zip,
        cellPhone:this.CellPhone,
        workPhone:this.WorkPhone,
        homePhone:this.HomePhone,
        email:this.Email,
        personalWebsite:this.PersonalWebsite,
        age:this.Age,
        dateOfBirth:this.DateOfBirth,
        height:this.Height,
        weight:this.Weight,
        placeOfBirth:this.PlaceOfBirth,
        health:this.Health,
        maritalStatus:this.MaritalStatus,
        children:this.Children,
        childrenNumber:this.ChildrenNumber,
        childrenAges:this.ChildrenAges,
        immigrationStatus:this.ImmigrationStatus,
        highSchool:this.HighSchool,
        highSchoolYear:this.HighSchoolYear,
        bachelors:this.Bachelors,
        bachelorsYear:this.BachelorsYear,
        masters:this.Masters,
        mastersYear:this.MastersYear,
        doctorate:this.Doctorate,
        doctorateYear:this.DoctorateYear,
        otherDegree:this.OtherDegree,
        otherDegreeYear:this.OtherDegreeYear,
        employed:this.Employed,
        employment:this.Employment,
        position:this.Position,
        income:this.Income,
        religiousPractice:this.ReligiousPractice,
        religiousPracticeBrief:this.ReligiousPracticeBrief,
        revertTime:this.RevertTime,
        beard:this.Beard,
        smoker:this.Smoker,
        preReligious:this.PreReligious,
        preReligiousBrief:this.PreReligiousBrief,
        preWear:this.PreWear,
        preSmoking:this.PreSmoking,
        preEthnic:this.PreEthnic,
        preEthnicSpecific:this.PreEthnicSpecific,
        preImmigrationStatus:this.PreImmigrationStatus,
        preMaritalStatus:this.PreMaritalStatus,
        preChildren:this.PreChildren,
        preEducation:this.PreEducation,
        preEmployment:this.PreEmployment,
        preIncome:this.PreIncome,
        preAgeGap:this.PreAgeGap,
        guarName:this.GuarName,
        guarAddress:this.GuarAddress,
        guarCity:this.GuarCity,
        guarState:this.GuarState,
        guarCountry:this.GuarCountry,
        guarPhone:this.GuarPhone,
        guarEmail:this.GuarEmail,
        guarProfession:this.GuarProfession,
        familyBrief:this.FamilyBrief,
        refName1:this.RefName1,
        refRelation1:this.RefRelation1,
        refPhone1:this.RefPhone1,
        refName2:this.RefName2,
        refRelation2:this.RefRelation2,
        refPhone2:this.RefPhone2,
        refName3:this.RefName3,
        refRelation3:this.RefRelation3,
        refPhone3:this.RefPhone3,
        photo:this.Photo,
        cv:this.Cv,
        album:this.Album,
        govIssuedId:this.GovIssuedId,
        matchShowLimit:this.MatchShowLimit,
        userPass:this.UserPass,
        status:this.Status,
        openingDate:this.OpeningDate,
        lastEdit:this.LastEdit

      };

      this.http.put(this.API_URL+'maleuser',val)
      .subscribe(res=>{
        alert(res.toString());
        this.refreshList();
      });
    }

    deleteClick(id:any){
      if(confirm('Are you sure?')){
      this.http.delete(this.API_URL+'maleuser/'+id)
      .subscribe(res=>{
        alert(res.toString());
        this.refreshList();
      });
      }
    }
}
